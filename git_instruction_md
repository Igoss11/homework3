# **Инструкция по работе системы контроля версий Git**

## Основная информация о система Git

**_Контроль версий_** - практика, которая позволяет отслеживать изменения исходного кода и управлять им.

**_Git_** - это просто программа, которая берет на себя вопросы контроля версий над проектом.

Разработчик и создатель Git - *Линус Торвальдс* (который также является создателем *Linux*)

## Проверка установленной версии Git

Чтобы проверить текущую установленную версию системы Git на ваш компьютер, введите команду:

    git --version

## Инициализация репозитория

Для инициализации (создания) репозитория используется команда:

    git init

## Проверка состояния репозитория

Чтобы проверить текущее состояние репозитория, используется команда:

    git status

## Добавление в индекс

Для того, чтобы добавить изменения в файле в буфер системы (добавить файлы как отслеживаемые), используется команда:

    git add <file_name>

Где вместо <file_name> указывается полное имя файла, в котором были произведены изменения.

__Не забываем указывать расширение файла!__

## Фиксация изменений

Чтобы зафиксировать изменения в файле, выполняется команда:

    git commit

Чтобы подписать какое-либо сообщение (комментарий) к этой фиксации, необходимо выполнить:

    git commit -m "your_message"

Где вместо "your_message" можно записать любое сообщение.

___!___ Также можно совместить 2 команды *git add* и *git commit*, используя команду:

    git commit -am "your_message"

## Просмотр журнала изменений

Для просмотра списка всех изменений (коммитов) файла, используется команда:

    git log

Для отображения списка всех изменений в коротком виде, используется команда:

    git log --oneline

Для отображения списка всех изменений, включая те, на которых мы сейчас не находимся, используется команда:

    git log --all

__! Эти команды можно совмещать между собой, в пределах команды git log, например:__

    git log --oneline --all
    git log -all --oneline

## Переключение между версиями

Для переключения на ранее сохраненную версию (коммит) выполняется команда:

    git checkout <hash>

Где __*hash*__ - номер коммита

Для переключения на основную (актуальную) версию коммита, выполняентся команда:

    git checkout master

## Просмотр отличий между коммитами